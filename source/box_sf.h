/* Header for module box_sf, generated by p2c */
#ifndef BOX_SF_H
#define BOX_SF_H

#include "pastrix.h"
#include "boxglobl.h"
#include "yapp.h"
#include "boxlocal.h"

extern void del_emblocks(short unr, unsigned short undelete);
extern void reset_laterflag(short unr);
extern void del_resume_list(void);
extern void kill_resume(void);
extern void load_resume(void);
extern short bbs_pack(short unr);
extern void send_pfbbram(short mode, short unr, char *puffer, long size,
			 long offset, char *betreff);
extern void send_pfbbdisk(short mode, short unr, long offset, char *tempname,
			  char *betreff);
extern boolean resend_userfile(boolean redirect, char *brett, char *newmbx);
extern void change_sfentries(short von, short bis, char *forcall, char typ,
			     char *newcall);
extern void look_for_mail(short unr, boolean not_last, boolean immediate);
extern void ok_sf_sending(short unr, short prop, long offset);
extern void send_fbb_proposals(short unr, boolean disc_if_none);
extern void prepare_for_next_fbb(short unr);
extern boolean check_prop_crc(short unr, char *eingabe);
extern void send_fbb_answer(short unr);
extern void analyse_fbb_answer(short unr, char *eingabe);
extern void set_packsf(short unr);
extern void fbbpack2(short unr, unsigned short infosize,
		     unsigned short *infstart, char *info);
extern void fbb2pack2(short unr, unsigned short infosize,
		      unsigned short *infstart, char *info);
extern void check_frag_sf(short unr);
extern void abort_sf(short unr, boolean immediate, char *txt);
extern void sfproterr(short unr);
extern sfdeftype *find_sf_pointer(char *call);
extern boolean in_real_sf(char *call);
extern void abort_routing(char *call);
extern void kill_all_routing_flags(void);
extern void close_filesf_output(short unr);
extern void close_filesf_input(short unr);
extern void do_filesf_input(short unr);
extern void start_sf(short unr, char *call, char *parameter);
extern void check_sftimer(void);
extern void set_sftimer(char *box, short min, short stnc, short sfcase,
			long maxb, long maxu, long maxp, long pifnone,
			long sutc, long eutc);
extern void set_sfparms(char *box, char *hs);
extern void show_sfparms(short unr, char *box);
extern void dispose_sfinfos(void);
extern void load_sfinfos(void);
extern boolean forward_ok(char *box, char *rubrik, char *hiermbx, char *frombox, char *bid,
      	      	    boolean splus, boolean bin);
extern unsigned short vermerke_sf(short unr_msg, boolean routtest,
  char *rubrik, char *from_box, char *to_box, indexstruct header1,
  char *lastvias);
extern boolean gen_sftest2(short unr, char *board, char *mbx);
extern boolean gen_sftest(short unr, char *eingabe);
extern void analyse_sf_command(short unr, char *eingabe, boolean return_);
extern void create_my_sid(char *sid, char *password);
extern void analyse_sid(boolean request, short unr, char *w);
extern void check_routing_timeouts(void);

#define in_sfp(call) (find_sf_pointer(call) != NULL)

#endif /*BOX_SF_H*/

